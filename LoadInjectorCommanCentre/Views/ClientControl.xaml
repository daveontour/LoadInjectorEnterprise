<UserControl x:Class="LoadInjectorCommanCentre.Views.ClientControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:LoadInjectorCommanCentre.Views"
             mc:Ignorable="d"
             d:DesignHeight="200" d:DesignWidth="300">

    <UserControl.Resources>

        <Style x:Key="ExecutionNode" TargetType="Grid">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=StatusText}" Value="Ready To Run">
                    <Setter Property="Background" Value="LawnGreen">
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=StatusText}" Value="Execution Complete">
                    <Setter Property="Background" Value="LawnGreen">
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=StatusText}" Value="Waiting for next iteration">
                    <Setter Property="Background" Value="Plum">
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=StatusText}" Value="Executing">
                    <Setter Property="Background" Value="DarkBlue" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=StatusText}" Value="Work Package Assigned">
                    <Setter Property="Background" Value="Yellow" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=StatusText}" Value="Un Assigned">
                    <Setter Property="Background" Value="LightGray" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="NodeLabel" TargetType="Label">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=StatusText}" Value="Executing">
                    <Setter Property="Foreground" Value="White" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="NodeText" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=StatusText}" Value="Executing">
                    <Setter Property="Foreground" Value="White" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RoundCorner" TargetType="{x:Type Button}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=StatusText}" Value="Executing">
                    <Setter Property="Foreground" Value="White">
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="Width" Value="70" />
            <Setter Property="Height" Value="18" />
            <Setter Property="Margin" Value="2,0,2,0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="8" BorderBrush="Black" BorderThickness="2">
                                <Border.Background>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5"
                                                        ScaleX="1.5" ScaleY="1.5" />
                                                <TranslateTransform X="0.02" Y="0.3" />
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#00000000" />
                                        <GradientStop Offset="0.3" Color="#FFFFFFFF" />
                                    </RadialGradientBrush>
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5" />
                                                    <TranslateTransform X="0.02" Y="0.3" />
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#00000000" Offset="1" />
                                            <GradientStop Color="#FF303030" Offset="0.3" />
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF33962B" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Height="105" Background="Bisque" Margin="5,5,5,5">

        <Grid  Grid.Row="0"   Style="{DynamicResource ExecutionNode}">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"></RowDefinition>
                <RowDefinition Height="20"></RowDefinition>
                <RowDefinition Height="20"></RowDefinition>
                <RowDefinition Height="20"></RowDefinition>
                <RowDefinition Height="20"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="74"></ColumnDefinition>
                <ColumnDefinition Width="80"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.ColumnSpan="3"  Style="{DynamicResource NodeLabel}" Margin="0,0,0,0" FontWeight="Bold">Execution Node</Label>
            <TextBlock Grid.Row="1" Grid.Column="2" Style="{DynamicResource NodeText}" Text="{Binding Path=IP}"></TextBlock>
            <TextBlock Grid.Row="2" Grid.Column="2"  Style="{DynamicResource NodeText}" Text="{Binding Path=ProcessID}"></TextBlock>
            <TextBlock Grid.Row="3" Grid.Column="2"  Style="{DynamicResource NodeText}" Text="{Binding Path=OSVersion}"></TextBlock>

            <Button Grid.Row="1" Grid.Column="0" Style="{DynamicResource RoundCorner}" x:Name="assignBtn" Click="Assign_OnClick" HorizontalAlignment="Left" Content="Assign" />
            <Button Grid.Row="1" Grid.Column="1" Style="{DynamicResource RoundCorner}" x:Name="prepBtn"  Click="Prep_OnClick" HorizontalAlignment="Left" Content="Prepare" />
            <Button Grid.Row="2" Grid.Column="0" Style="{DynamicResource RoundCorner}" x:Name="execBtn" Click="Exec_OnClick" HorizontalAlignment="Left" Content="Execute" />
            <Button Grid.Row="2" Grid.Column="1" Style="{DynamicResource RoundCorner}" x:Name="stopBtn" Click="Stop_OnClick" HorizontalAlignment="Left" Content="Stop" />
            <Button Grid.Row="3" Grid.Column="0" Style="{DynamicResource RoundCorner}" x:Name="viewBtn"  HorizontalAlignment="Left" Click="Status_OnClick"  Content="View Status" />
            <Button Grid.Row="3" Grid.Column="1"  Style="{DynamicResource RoundCorner}" x:Name="disconnectBtn"  HorizontalAlignment="Left" Click="Disconnect_OnClick"  Content="Disconnect" />

            <TextBlock  Style="{DynamicResource NodeText}" Grid.Row="6" Grid.ColumnSpan="3" Text="{Binding Path=StatusText}" HorizontalAlignment="Center" FontWeight="Bold" />
        </Grid>
    </Grid>
</UserControl>