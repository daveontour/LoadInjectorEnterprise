<UserControl x:Class="LoadInjector.Views.TreeEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:common="clr-namespace:LoadInjector.Common"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1200" Name="loaderWindow">

    <UserControl.CommandBindings>
        <CommandBinding Command="Save" Executed="SaveAsCommandBinding_Executed"/>
    </UserControl.CommandBindings>

    <UserControl.InputBindings>
        <KeyBinding Key="S" Modifiers="Control" Command="Save"/>
    </UserControl.InputBindings>

    <UserControl.Resources>


        <common:TaskListDataTemplateSelector x:Key="myDataTemplateSelector"/>

        <Canvas x:Key="input" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Width="40" Height="47" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path x:Name="path" Width="40.25" Height="47"  Stretch="Uniform" Fill="#FF000000" Data="F1 M 35,51L 51,51L 43,43L 49.25,43L 60.25,53.5L 50.25,64L 43,64L 51,56L 35,56L 35,51 Z M 20,17L 43.25,17L 56,29.75L 56,47.75L 52,43.75L 52,34L 39,34L 39,21L 24,21L 24,55L 33.75,55L 34.75,59L 20,59L 20,17 Z M 43,22.25L 43,30L 50.75,30L 43,22.25 Z "/>
        </Canvas>

        <Canvas x:Key="output" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_page_duplicate" Width="38" Height="38">
            <Path  x:Name="path2" Width="38" Height="38" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="#FF000000" Data="F1 M 27,47L 31,47L 31,53L 55,53L 55,35L 43,35L 43,23L 31,23L 31,41L 27,41L 27,19L 47.25,19L 59,30.75L 59,57L 27,57L 27,47 Z M 22,42L 40,42L 33,36L 39,36L 48.2918,44.3334L 39,52L 33,52L 40,46L 22,46L 22,42 Z M 47,24.25L 47,31L 53.75,31L 47,24.25 Z "/>
        </Canvas>

        <Canvas x:Key="monitor" Background="Transparent"  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_monitor" Width="30" Height="30" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="30" Height="30.0" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="#FF000000" Data="F1 M 20,23.0002L 55.9998,23.0002C 57.1044,23.0002 57.9998,23.8956 57.9998,25.0002L 57.9999,46C 57.9999,47.1046 57.1045,48 55.9999,48L 41,48L 41,53L 45,53C 46.1046,53 47,53.8954 47,55L 47,57L 29,57L 29,55C 29,53.8954 29.8955,53 31,53L 35,53L 35,48L 20,48C 18.8954,48 18,47.1046 18,46L 18,25.0002C 18,23.8956 18.8954,23.0002 20,23.0002 Z M 21,26.0002L 21,45L 54.9999,45L 54.9998,26.0002L 21,26.0002 Z "/>
        </Canvas>

        <Canvas  x:Key="logger"  Background="Transparent" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_database" Width="30" Height="30" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="30" Height="30" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="#FF000000"  Data="F1 M 38,19C 47.3888,19 55,21.0147 55,23.5038L 55,25.5C 55,27.9853 47.3888,30 38,30C 28.6112,30 21,27.9853 21,25.5L 21,23.5C 21,21.0147 28.6112,19 38,19 Z M 55,52.5C 55,54.9853 47.3888,57 38,57C 28.6112,57 21,54.9853 21,52.5L 21,46.5C 21,48.9853 28.6112,51 38,51C 47.384,51 54.9921,48.9874 55,46.5039L 55,52.5 Z M 55,43.5C 55,45.9853 47.3888,48 38,48C 28.6112,48 21,45.9853 21,43.5L 21,37.5C 21,39.9853 28.6112,42 38,42C 47.384,42 54.9921,39.9874 55,37.5038L 55,43.5 Z M 55,34.5C 55,36.9853 47.3888,39 38,39C 28.6112,39 21,36.9853 21,34.5L 21,28.5C 21,30.9853 28.6112,33 38,33C 47.384,33 54.9921,30.9874 55,28.5038L 55,34.5 Z "/>
        </Canvas>

        <Canvas x:Key="namespace" Background="Transparent" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_folder_open" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="44" Height="30" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="#FF000000" Data="F1 M 19,50L 28,34L 63,34L 54,50L 19,50 Z M 19,28.0001L 35,28C 36,25 37.4999,24.0001 37.4999,24.0001L 48.75,24C 49.3023,24 50,24.6977 50,25.25L 50,28L 53.9999,28.0001L 53.9999,32L 27,32L 19,46.4L 19,28.0001 Z "/>
        </Canvas>

        <Canvas x:Key="service" Background="Transparent" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_settings" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="34.9239" Height="34.9239" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="#FF000000" Data="F1 M 38,23.5C 38.8643,23.5 39.7109,23.5756 40.5337,23.7206L 42.6275,18.5381L 48.1901,20.787L 46.0964,25.9692C 47.6473,27.0149 48.9851,28.3527 50.0308,29.9036L 55.213,27.8099L 57.4619,33.3725L 52.2794,35.4664C 52.4244,36.2891 52.5,37.1357 52.5,38C 52.5,38.8643 52.4244,39.7109 52.2794,40.5337L 57.4619,42.6275L 55.213,48.1901L 50.0308,46.0964C 49.0795,47.5073 47.8865,48.7418 46.5112,49.7405L 48.7844,54.8462L 43.3041,57.2891L 41.0307,52.1828C 40.0533,52.3906 39.0394,52.5 38,52.5C 37.1357,52.5 36.2891,52.4244 35.4664,52.2794L 33.3725,57.462L 27.8099,55.213L 29.9036,50.0309C 28.3527,48.9851 27.0149,47.6473 25.9691,46.0964L 20.787,48.1901L 18.538,42.6275L 23.7206,40.5336C 23.5756,39.7109 23.5,38.8643 23.5,38C 23.5,37.1357 23.5756,36.2891 23.7206,35.4664L 18.538,33.3725L 20.787,27.8099L 25.9691,29.9036C 26.9205,28.4927 28.1135,27.2582 29.4889,26.2594L 27.2157,21.1537L 32.6959,18.7109L 34.9694,23.8172C 35.9468,23.6094 36.9606,23.5 38,23.5 Z M 38,28C 32.4771,28 28,32.4772 28,38C 28,43.5229 32.4771,48 38,48C 43.5228,48 48,43.5229 48,38C 48,32.4772 43.5228,28 38,28 Z "/>
        </Canvas>

        <Path x:Key="filter" x:Name="filter" Width="17" Height="19.1667" Stretch="Fill" Fill="#FF000000" Data="F1 M 34.8333,61.75L 34.8333,42.75L 19,20.5833L 57,20.5833L 41.1667,42.75L 41.1667,58.5833L 34.8333,61.75 Z "/>
        <Path x:Key="altqueue" Width="25" Height="25"  Stretch="Uniform" Fill="Gray" Data="F1 M 35,51L 51,51L 43,43L 49.25,43L 60.25,53.5L 50.25,64L 43,64L 51,56L 35,56L 35,51 Z M 20,17L 43.25,17L 56,29.75L 56,47.75L 52,43.75L 52,34L 39,34L 39,21L 24,21L 24,55L 33.75,55L 34.75,59L 20,59L 20,17 Z M 43,22.25L 43,30L 50.75,30L 43,22.25 Z "/>
        <Path x:Key="transform" Width="17.8333" Height="20.1667" Stretch="Fill" Fill="#FF000000" Data="F1 M 38,20.5833C 42.9908,20.5833 47.4912,22.6825 50.6667,26.046L 50.6667,17.4167L 55.4166,22.1667L 55.4167,34.8333L 42.75,34.8333L 38,30.0833L 46.8512,30.0833C 44.6768,27.6539 41.517,26.125 38,26.125C 31.9785,26.125 27.0037,30.6068 26.2296,36.4167L 20.6543,36.4167C 21.4543,27.5397 28.9148,20.5833 38,20.5833 Z M 38,49.875C 44.0215,49.875 48.9963,45.3932 49.7703,39.5833L 55.3457,39.5833C 54.5457,48.4603 47.0852,55.4167 38,55.4167C 33.0092,55.4167 28.5088,53.3175 25.3333,49.954L 25.3333,58.5833L 20.5833,53.8333L 20.5833,41.1667L 33.25,41.1667L 38,45.9167L 29.1487,45.9167C 31.3231,48.3461 34.483,49.875 38,49.875 Z "/>
        <Path x:Key="arrow" Stroke="Black" Panel.ZIndex="10" />
        <!--<Path x:Key="arrowHead" Stroke="Black" />-->
        <Polygon x:Key="arrowHead" Fill="SteelBlue" StrokeThickness = "1" Stroke="Black"
                HorizontalAlignment = "Left"
                VerticalAlignment = "Center" Panel.ZIndex="10" />

        <Border x:Key="qxLabel" CornerRadius="4" Background="MidnightBlue" Width="300" Height="60" HorizontalAlignment="Center" VerticalAlignment="Center" >
            <Border.LayoutTransform>
                <RotateTransform Angle="90" />
            </Border.LayoutTransform>
            <Label x:Name="label" Foreground="White" FontSize="24" FontStyle="Italic"  HorizontalAlignment="Center" VerticalAlignment="Center">Load Injector</Label>
        </Border>

        <Border x:Key="fltSource" Height="30" Width="350"  Background="MidnightBlue">
            <StackPanel Orientation="Horizontal" Height="26" Width="346" Background="LightYellow">
                <Label Content="AMS Flights" FontWeight="DemiBold" FontStyle="Italic" />
                <Label x:Name="minOff"/>
                <Label x:Name="maxOff"/>
            </StackPanel>
        </Border>

        <Border x:Key="amsDataDriven" Height="30" Width="350"  Background="MidnightBlue">
            <StackPanel Orientation="Horizontal" Height="26" Width="346" Background="DeepSkyBlue" >
                <Label Content="(AMS Data) "  Foreground="Black"/>
                <Label x:Name="amsDataDrivenLineName" FontWeight="DemiBold" Foreground="Black"/>
                <Label x:Name="amsDataDrivenLineVars" FontWeight="Normal"  Foreground="Black"/>
            </StackPanel>
        </Border>

        <Border x:Key="csvDataDriven" Height="30" Width="350"  Background="MidnightBlue">
            <StackPanel Orientation="Horizontal" Height="26" Width="346" Background="DeepSkyBlue" >
                <Label Content="(CSV Data) " Foreground="Black"/>
                <Label x:Name="csvDataDrivenLineName" FontWeight="DemiBold"  Foreground="Black"/>
                <Label x:Name="csvDataDrivenLineVars" FontWeight="Normal"  Foreground="Black"/>
            </StackPanel>
        </Border>

        <Border x:Key="excelDataDriven" Height="30" Width="350"  Background="MidnightBlue">
            <StackPanel Orientation="Horizontal" Height="26" Width="346" Background="DeepSkyBlue" >
                <Label Content="(Excel Data) " Foreground="Black"/>
                <Label x:Name="excelDataDrivenLineName" FontWeight="DemiBold" Foreground="Black"/>
                <Label x:Name="excelDataDrivenLineVars" FontWeight="Normal" Foreground="Black"/>
            </StackPanel>
        </Border>

        <Border x:Key="xmlDataDriven" Height="30" Width="350"  Background="MidnightBlue">
            <StackPanel Orientation="Horizontal" Height="26" Width="346" Background="DeepSkyBlue" >
                <Label Content="(XML Data) " Foreground="Black"/>
                <Label x:Name="xmlDataDrivenLineName" FontWeight="DemiBold" Foreground="Black"/>
                <Label x:Name="xmlDataDrivenLineVars" FontWeight="Normal" Foreground="Black"/>
            </StackPanel>
        </Border>

        <Border x:Key="jsonDataDriven" Height="30" Width="350"  Background="MidnightBlue">
            <StackPanel Orientation="Horizontal" Height="26" Width="346" Background="DeepSkyBlue" >
                <Label Content="(JSON Data) " Foreground="Black"/>
                <Label x:Name="jsonDataDrivenLineName" FontWeight="DemiBold" Foreground="Black"/>
                <Label x:Name="jsonDataDrivenLineVars" FontWeight="Normal" Foreground="Black"/>
            </StackPanel>
        </Border>

        <Border x:Key="dbDataDriven" Height="30" Width="350"  Background="MidnightBlue">
            <StackPanel Orientation="Horizontal" Height="26" Width="346" Background="DeepSkyBlue" >
                <Label Content="(Database Data) " Foreground="Black"/>
                <Label x:Name="dbDataDrivenLineName" FontWeight="DemiBold" Foreground="Black"/>
                <Label x:Name="dbDataDrivenLineVars" FontWeight="Normal" Foreground="Black"/>
            </StackPanel>
        </Border>

        <Border x:Key="rateDriven" Height="30" Width="350"  Background="MidnightBlue">
            <StackPanel Orientation="Horizontal" Height="26" Width="346" Background="SkyBlue" >
                <Label x:Name="rateDrivenLineName" FontWeight="DemiBold" Foreground="Black"/>
            </StackPanel>
        </Border>

        <Border x:Key="chainDriven" Height="30" Width="350"  Background="MidnightBlue">
            <StackPanel x:Name="chainDrivenStack" Orientation="Horizontal" Height="26" Width="346" Background="LightGray" >
                <Label x:Name="chainDrivenLineName" FontWeight="DemiBold" Foreground="Black"/>
                <Label x:Name="chainDrivenLineDelay"  Foreground="Black"/>
            </StackPanel>
        </Border>

        <Border x:Key="amsDirect" Height="30" Width="350"  Background="MidnightBlue">
            <StackPanel Orientation="Horizontal" Height="26" Width="346" Background="DarkSeaGreen" >
                <Label x:Name="amsLineName" FontWeight="DemiBold" Foreground="Black"/>
                <Label x:Name="amsLineVars" FontWeight="Normal" Foreground="Black"/>
            </StackPanel>
        </Border>

        <Border x:Key="dest" Height="30" Width="350"  Background="MidnightBlue">
            <StackPanel Orientation="Horizontal" Height="26" Width="346" Background="MediumSeaGreen">
                <Label x:Name="directLineName" FontWeight="DemiBold"  Foreground="Black"/>
                <Label x:Name="directLineProtocol" FontWeight="Normal"  Foreground="Black"/>
                <Label x:Name="directLineVars" FontWeight="Normal"  Foreground="Black"/>
            </StackPanel>
        </Border>

        <StackPanel x:Key="amsHolder" Panel.ZIndex="1" Orientation="Vertical" Width="350" Background="#0D88F3" Margin="5,5,5,5" >
            <StackPanel.Resources>
                <Style TargetType="{x:Type StackPanel }">
                    <Setter Property="Margin" Value="5,0,5,5"/>
                </Style>
            </StackPanel.Resources>
        </StackPanel>

        <StackPanel x:Key="destHolder" Panel.ZIndex="1" Orientation="Vertical" Width="350" Background="#0D88F3"  Margin="5,5,5,5" >
            <StackPanel.Resources>
                <Style TargetType="{x:Type StackPanel }">
                    <Setter Property="Margin" Value="5,0,5,5"/>
                </Style>
            </StackPanel.Resources>
        </StackPanel>

        <StackPanel x:Key="csvSourceHolder" Panel.ZIndex="1" Orientation="Vertical" Width="350" Background="#0D6CF3"  Margin="5,5,5,5" >
            <StackPanel.Resources>
                <Style TargetType="{x:Type StackPanel }">
                    <Setter Property="Margin" Value="5,0,5,5"/>
                </Style>
            </StackPanel.Resources>
        </StackPanel>

        <HierarchicalDataTemplate x:Key="NodeTemplate">
            <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="text" Text="{Binding Path=Value}"  Margin="5,2,5,2"/>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::node()" />
            </HierarchicalDataTemplate.ItemsSource>

            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=NodeType}" Value="Text">
                    <Setter TargetName="text" Property="Text" Value="{Binding Path=Value}"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=NodeType}" Value="Element">
                    <Setter TargetName="text" Property="Text" Value="{Binding Path=Name}"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=NodeType}" Value="Comment">
                    <!--<Setter TargetName="text" Property="Visibility" Value="Collapsed"></Setter>-->
                    <Setter TargetName="text" Property="Text" Value="Comments"></Setter>
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="InputNodeTemplate">
            <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="text" Text="{Binding Path=Value}">
                </TextBlock>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::node()" />
            </HierarchicalDataTemplate.ItemsSource>

            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=NodeType}" Value="Text">
                    <Setter TargetName="text" Property="Text" Value="{Binding Path=Value}"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=NodeType}" Value="Element">
                    <Setter TargetName="text" Property="Text" Value="{Binding Path=Name}"></Setter>
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate x:Key="ConfigNodeTemplate">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Load Injector Instance Configuration"  FontWeight="Bold" FontSize="14"></TextBlock>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource >
                <Binding XPath="child::node()" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="SettingsNodeTemplate">
            <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                <Image Source="/LoadInjector;component/assets/Settings_16x.png" Margin="5,0,0,0"/>
                <TextBlock Text="Settings" FontSize="14" Margin="5,2,5,2"></TextBlock>
            </StackPanel>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="LinesNodeTemplate" >
            <StackPanel Orientation="Horizontal" Margin="0,0,0,0" >
                <Image x:Name="treeImgLines" Source="/LoadInjector;component/assets/FolderClosed_16x.png" Margin="5,0,0,0" />
                <TextBlock Text="Message Destinations" Margin="5,2,5,2" FontSize="14"  Foreground="Green" FontWeight="DemiBold"/>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::node()" />
            </HierarchicalDataTemplate.ItemsSource>

            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsExpanded}" Value="True">
                    <Setter TargetName="treeImgLines" Property="Source" Value="/LoadInjector;component/assets/FolderOpened_16x.png"/>
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>

        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="EventDrivenLinesNodeTemplate">
            <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                <Image x:Name="eventImg" Source="/LoadInjector;component/assets/FolderClosed_16x.png" Margin="5,0,0,0"/>
                <TextBlock Text="Timed Event Driven Data Injectors" Margin="5,2,5,2" FontSize="14" Foreground="Blue" FontWeight="DemiBold"/>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::node()" />
            </HierarchicalDataTemplate.ItemsSource>
            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsExpanded}" Value="True">
                    <Setter TargetName="eventImg" Property="Source" Value="/LoadInjector;component/assets/FolderOpened_16x.png"/>
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>

        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="RateDrivenLinesNodeTemplate">
            <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                <Image x:Name="eventRate" Source="/LoadInjector;component/assets/FolderClosed_16x.png" Margin="5,0,0,0"/>
                <TextBlock Text="Rate Driven Data Injectors" Margin="5,2,5,2" FontSize="14"  Foreground="Blue" FontWeight="DemiBold"/>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::node()" />
            </HierarchicalDataTemplate.ItemsSource>

            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsExpanded}" Value="True">
                    <Setter TargetName="eventRate" Property="Source" Value="/LoadInjector;component/assets/FolderOpened_16x.png"/>
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="RateDrivenNodeTemplate">
            <StackPanel Orientation="Horizontal"  Margin="0,0,0,0">
                <Image Source="/LoadInjector;component/assets/Time_16x.png" Margin="5,0,0,0" />
                <!--    <TextBlock Text="Source: " Margin="5,2,0,0"></TextBlock> -->
                <TextBlock Text="{Binding XPath=@name}" Margin="5,2,5,0" Foreground="Blue" />
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::node()" />
            </HierarchicalDataTemplate.ItemsSource>

        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="ChainedDrivenNodeTemplate">
            <StackPanel Orientation="Horizontal"  Margin="0,0,0,0">
                <Image Source="/LoadInjector;component/assets/Time_16x.png" Margin="5,0,0,0" />
                <!--    <TextBlock Text="Source: " Margin="5,2,0,0"></TextBlock> -->
                <TextBlock Text="{Binding XPath=@name}" Margin="5,2,5,0" Foreground="Blue" />
                <TextBlock Text="{Binding XPath=@delay}" Margin="5,2,5,0" Foreground="Blue" />
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::node()" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="VariableNodeTemplate">
            <StackPanel Orientation="Horizontal">
                <Image Source="/LoadInjector;component/assets/Assign_16x.png"  Margin="10,2,0,0" />
                <TextBlock Text="Variable: "  Margin="5,2,0,0"></TextBlock>
                <TextBlock Text="{Binding XPath=@token}"  Margin="0,2,0,0" />
                <!--   <TextBlock Text=", Type = "  Margin="0,2,0,0"></TextBlock> -->
                <TextBlock Text="{Binding XPath=@type}"  Margin="10,2,5,0" FontStyle="Italic" FontWeight="DemiBold"/>
            </StackPanel>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="AMSVariableNodeTemplate">
            <StackPanel Orientation="Horizontal">
                <Image Source="/LoadInjector;component/assets/Assign_16x.png" Margin="10,2,0,0"/>
                <TextBlock Text="Variable: ExternalName = " Margin="5,2,0,0" />
                <TextBlock Text="{Binding XPath=@externalName}"  Margin="0,2,0,0"/>
                <TextBlock Text=", Type = "  Margin="0,2,0,0" />
                <TextBlock Text="{Binding XPath=@type}"   Margin="0,2,5,0"/>
            </StackPanel>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="HiddenNodeTemplate">
            <StackPanel Visibility="Collapsed" />
        </HierarchicalDataTemplate>



        <HierarchicalDataTemplate x:Key="DestinationNodeTemplate">
            <StackPanel Orientation="Horizontal"  Margin="0,0,0,0">
                <Image Source="/LoadInjector;component/assets/DestinationAssistant_16x.png"  Margin="5,0,0,0"/>
                <!--    <TextBlock Text="Destination: " Margin="5,2,0,2"></TextBlock>  -->
                <TextBlock Text="{Binding XPath=@name}"  Margin="5,2,0,2" Foreground="MediumSeaGreen" FontWeight="Bold"/>
                <TextBlock Text=" ("  Foreground="MediumSeaGreen" Margin="0,2,0,2" FontWeight="Bold"/>
                <TextBlock Text="{Binding XPath=@protocol}" Margin="0,2,0,2"  Foreground="MediumSeaGreen" FontWeight="Bold"/>
                <TextBlock Text=")"  Foreground="MediumSeaGreen" Margin="0,2,5,2" FontWeight="Bold"/>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="./*[not(self::subscribed) and not(self::header)]" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="AMSDirectNodeTemplate">
            <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                <Image Source="/LoadInjector;component/assets/DestinationAssistant_16x.png" Margin="5,0,0,0" />
                <TextBlock Text="SITA AMS: "  Margin="5,2,0,2" ></TextBlock>
                <TextBlock Text="{Binding XPath=@name}" Foreground="DarkSeaGreen" Margin="0,2,5,2" FontWeight="Bold" />
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="./*[not(self::subscribed)]" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="AMSDataDrivenNodeTemplate">
            <StackPanel Orientation="Horizontal">
                <Image Source="/LoadInjector;component/assets/StartTime_16x.png" Margin="5,0,0,0"/>
                <!--    <TextBlock Text="Source: " Margin="5,2,0,2"></TextBlock>  -->
                <TextBlock Text="{Binding XPath=@name}" Margin="5,2,0,2"  Foreground="Blue"/>
                <TextBlock Text="(AMS)" Margin="5,2,5,2"  Foreground="Blue"/>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::chained" />
            </HierarchicalDataTemplate.ItemsSource>

        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="CSVDataDrivenNodeTemplate">
            <StackPanel Orientation="Horizontal">
                <Image  Source="/LoadInjector;component/assets/StartTime_16x.png" Margin="5,0,0,0"/>
                <!--  <TextBlock Text="Source: " Margin="5,2,0,2"></TextBlock> -->
                <TextBlock Text="{Binding XPath=@name}" Margin="5,2,0,2"  Foreground="Blue"/>
                <TextBlock Text="(CSV)" Margin="5,2,5,2"  Foreground="Blue"/>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::chained" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="ExcelDataDrivenNodeTemplate">
            <StackPanel Orientation="Horizontal">
                <Image Source="/LoadInjector;component/assets/StartTime_16x.png" Margin="5,0,0,0"/>
                <!-- <TextBlock Text="Source: " Margin="5,2,0,2"></TextBlock> -->
                <TextBlock Text="{Binding XPath=@name}" Margin="5,2,0,2" Foreground="Blue" />
                <TextBlock Text="(Excel)" Margin="5,2,5,2" Foreground="Blue" />
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::chained" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="XMLDataDrivenNodeTemplate">
            <StackPanel Orientation="Horizontal">
                <Image Source="/LoadInjector;component/assets/StartTime_16x.png" Margin="5,0,0,0"/>
                <!--  <TextBlock Text="Source: " Margin="5,2,0,2"></TextBlock> -->
                <TextBlock Text="{Binding XPath=@name}" Margin="5,2,0,2"  Foreground="Blue"/>
                <TextBlock Text="(XML)" Margin="5,2,5,2"  Foreground="Blue"/>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::chained" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="JSONDataDrivenNodeTemplate">
            <StackPanel Orientation="Horizontal">
                <Image Source="/LoadInjector;component/assets/StartTime_16x.png" Margin="5,0,0,0"/>
                <!--     <TextBlock Text="Source: " Margin="5,2,0,2"></TextBlock> -->
                <TextBlock Text="{Binding XPath=@name}" Margin="5,2,0,2"  Foreground="Blue"/>
                <TextBlock Text="(JSON)" Margin="5,2,5,2"  Foreground="Blue"/>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::chained" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="DataBaseDataDrivenNodeTemplate">
            <StackPanel Orientation="Horizontal">
                <Image Source="/LoadInjector;component/assets/StartTime_16x.png" Margin="5,0,0,0"/>
                <!--      <TextBlock Text="Source: " Margin="5,2,0,2"></TextBlock> -->
                <TextBlock Text="{Binding XPath=@name}" Margin="5,2,0,2"  Foreground="Blue"/>
                <TextBlock Text="(Database)" Margin="5,2,5,2"  Foreground="Blue"/>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::chained" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>



        <!-- Filters -->


        <HierarchicalDataTemplate x:Key="FilterNodeTemplate">
            <StackPanel Orientation="Horizontal">
                <Image Source="/LoadInjector;component/assets/Filter_16x.png" Margin="5,0,0,0"/>
                <TextBlock Foreground="Red" Text="Filter Flight" Margin="5,2,5,2"></TextBlock>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::node()" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="ExpressionNodeTemplate">
            <StackPanel Orientation="Horizontal">
                <TextBlock Foreground="Green" Text="Output Node"  Margin="5,2,5,2"></TextBlock>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::node()" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="ORExpression">
            <StackPanel Orientation="Horizontal">
                <TextBlock Foreground="Black" Text="Boolean OR" Margin="5,2,5,2"></TextBlock>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::node()" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="XORExpression">
            <StackPanel Orientation="Horizontal">
                <TextBlock Foreground="Black" Text="Boolean XOR"  Margin="5,2,5,2"></TextBlock>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::node()" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="ANDExpression">
            <StackPanel Orientation="Horizontal">
                <TextBlock Foreground="Black" Text="Boolean AND" Margin="5,2,5,2"></TextBlock>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::node()" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="NOTExpression">
            <StackPanel Orientation="Horizontal">
                <TextBlock Foreground="Black" Text="Boolean NOT" Margin="5,2,5,2"></TextBlock>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::node()" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="SingleFilterNodeTemplate">
            <StackPanel Orientation="Horizontal">
                <TextBlock Foreground="Green" Text="Output Node"  Margin="5,2,5,2"></TextBlock>
            </StackPanel>
            <HierarchicalDataTemplate.ItemsSource>
                <Binding XPath="child::node()" />
            </HierarchicalDataTemplate.ItemsSource>
        </HierarchicalDataTemplate>

        <XmlDataProvider x:Key="xmlDataProvider"></XmlDataProvider>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="375" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="10*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="8*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*" />
                <RowDefinition Height="5"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>

            <GridSplitter 
            Grid.Row="0" Grid.Column="1"
            Background="Gray" 
            Height="Auto" Width="Auto" 
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Cursor="SizeWE"/>

            <GridSplitter 
            Grid.Row="0" Grid.Column="3"
            Grid.RowSpan="3"
            Background="Gray" 
            Height="Auto" Width="Auto" 
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Cursor="SizeWE"/>

            <GridSplitter 
            Grid.Row="1" Grid.Column="0"
            Grid.RowSpan="1"
            Grid.ColumnSpan="3"
            Background="Gray" 
            Height="Auto" Width="Auto" 
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Cursor="SizeNS"/>

            <!-- Column 0: Tree View of Config file -->
            <TreeView Name="xmlTreeView" Grid.Row="0" Grid.Column="0"
                  ItemsSource="{Binding Source={StaticResource xmlDataProvider}, XPath=*}"
                  ItemTemplateSelector="{StaticResource myDataTemplateSelector}"
                  TreeViewItem.Selected="XmlTreeView_Selected" Background="WhiteSmoke" >
                <TreeView.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightGray" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                </TreeView.Resources>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Padding" Value="0,0,0,0"/>

                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                        <Setter Property="IsExpanded" Value="True"/>
                        <!--  <Setter Property="IsSelected" Value="{Binding Path=SelectedElement}" /> -->
                        <EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>

            <Grid Grid.Column="2" Grid.Row="0">
                <Grid.RowDefinitions>

                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border BorderBrush="Gray" BorderThickness="1" Grid.Row="0" Background="WhiteSmoke">

                    <ScrollViewer x:Name="configViewBox"  VerticalAlignment="Center" >
                        <!--<Canvas VerticalAlignment="Center"  x:Name="panel" Width="600" Height="600" />-->
                    </ScrollViewer>
                </Border>
            </Grid>

            <TabControl Grid.Row="2" Grid.Column="0" Grid.ColumnSpan ="3" x:Name="bottomTabControl">
                <!-- Raw XML -->
                <TabItem>
                    <TabItem.Header>
                        <TextBlock Text="Configuration" FontSize="12" />
                    </TabItem.Header>
                    <DockPanel>
                        <!-- <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Height="30" FlowDirection="RightToLeft">
                                <Button Margin="5,2,2,2" Click="Button_Click">Commit Updates</Button>
                            </StackPanel> -->
                        <TextBox x:Name="configXMLText"  Text="{Binding Path=XMLText, Mode=OneWay}" IsReadOnly="False" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible"  HorizontalAlignment="Stretch" Background="#FFD1CACA" VerticalAlignment="Stretch" />
                        <!-- <RichTextBox x:Name="configXMLText"   IsReadOnly="False" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible"  HorizontalAlignment="Stretch" Background="#FFD1CACA" VerticalAlignment="Stretch" /> -->
                    </DockPanel>
                </TabItem>
                <TabItem>
                    <TabItem.Header>Config Comments</TabItem.Header>
                    <TextBox TextWrapping="Wrap" Text="{Binding Path=Comments, Mode=TwoWay}" IsReadOnly="False" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible"  HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" AcceptsReturn="True" />
                </TabItem>
                <TabItem Visibility="{Binding TemplateFileVisibility}">
                    <TabItem.Header>
                        <TextBlock Text="Selected Template File" FontSize="12" />
                    </TabItem.Header>
                    <Grid  Visibility="{Binding TemplateFileVisibility}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="143*"/>
                            <ColumnDefinition Width="856*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <DockPanel Grid.Row="0" Grid.ColumnSpan="2" >
                            <Button DockPanel.Dock="Right" IsEnabled="{Binding Path=EnableTemplateSave}" Click="TemplateSaveButton_Click" HorizontalAlignment="Right" Width="80" Height="25" Margin="0,2,10,2">Save</Button>
                            <Label DockPanel.Dock="Left" Content="variable" Foreground="Blue" FontStyle="Italic" FontWeight="Bold" HorizontalAlignment="Left"></Label>
                            <Label DockPanel.Dock="Left" Content="- Variable" ></Label>
                            <Label DockPanel.Dock="Left" Content="variable" Foreground="Red"  FontStyle="Italic" FontWeight="Bold"></Label>
                            <Label DockPanel.Dock="Left" Content="- Selected Variable"></Label>
                            <Label Content="{Binding Path=TemplateFile, Mode=OneWay}" ></Label>
                        </DockPanel>
                        <RichTextBox  x:Name="TemplateText" Grid.Row="1" PreviewKeyDown="TemplateText_KeyDown" FontFamily="Courier New" IsReadOnly="False" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.ColumnSpan="2" >
                            <RichTextBox.Resources>
                                <Style TargetType="{x:Type Paragraph}">
                                    <Setter Property="Margin" Value="0" />
                                </Style>
                            </RichTextBox.Resources>
                        </RichTextBox>
                    </Grid>
                </TabItem>
            </TabControl>
            <TabControl Grid.Row="0" Grid.Column="4" Grid.RowSpan="3" x:Name="destinationTabControl" >
                <TabItem Visibility="Collapsed">
                    <TabItem.Header>
                        <TextBlock Text="{Binding Path=Tab0Label}"/>
                    </TabItem.Header>

                    <DockPanel>
                        <Grid DockPanel.Dock="Bottom" HorizontalAlignment="Stretch"  Visibility="{Binding HeaderVisibility}" MinHeight="150" MaxHeight="150">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="45"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="105"/>
                                <ColumnDefinition Width="110"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock FontWeight="Bold" Grid.Row="0" Grid.Column="0" Margin="0,15">List of HTTP Header</TextBlock>
                            <Button Click="Add_Header"  Grid.Row="0" Grid.Column="1" Margin="5,15,0,2" Width="100">Add Header</Button>
                            <Button Click="Delete_Header0"   Grid.Row="0" Grid.Column="2" Margin="5,15,5,2" Width="100">Delete Header</Button>
                            <DataGrid VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray" RenderOptions.EdgeMode="Aliased" x:Name="headerDataGrid0" Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="3" VerticalAlignment="Stretch" AutoGenerateColumns="False" Background="White" ItemsSource="{Binding Headers, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" AlternatingRowBackground="WhiteSmoke" VerticalScrollBarVisibility="Visible">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Header Name" Binding="{Binding Name}" Width="*"/>
                                    <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="120"/>
                                </DataGrid.Columns>

                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="BorderThickness" Value="0,2,0,2"/>
                                        <Setter Property="BorderBrush" Value="White"/>
                                    </Style>
                                </DataGrid.CellStyle>
                            </DataGrid>
                        </Grid>

                        <xctk:PropertyGrid  x:Name="_propertyGrid" SelectedObject="{Binding MyGrid}"  AutoGenerateProperties="true" Margin="0,0,6,0" NameColumnWidth="200" ShowSearchBox="False" ShowSummary="True" ShowSortOptions="False" VerticalAlignment="Stretch">
                            <xctk:PropertyGrid.PropertyDefinitions>
                                <xctk:PropertyDefinition TargetProperties="Multiplier" />
                            </xctk:PropertyGrid.PropertyDefinitions>

                            <xctk:PropertyGrid.EditorDefinitions>
                                <xctk:EditorTemplateDefinition>
                                    <xctk:EditorTemplateDefinition.TargetProperties>
                                        <System:String>NormalDouble</System:String>
                                    </xctk:EditorTemplateDefinition.TargetProperties>
                                    <xctk:EditorTemplateDefinition.EditingTemplate>
                                        <DataTemplate>
                                            <xctk:DoubleUpDown FormatString="F2" Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </xctk:EditorTemplateDefinition.EditingTemplate>
                                </xctk:EditorTemplateDefinition>

                                <xctk:EditorTemplateDefinition>
                                    <xctk:EditorTemplateDefinition.TargetProperties>
                                        <System:String>StdDev</System:String>
                                    </xctk:EditorTemplateDefinition.TargetProperties>
                                    <xctk:EditorTemplateDefinition.EditingTemplate>
                                        <DataTemplate>
                                            <xctk:DoubleUpDown FormatString="F2" Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="0.0"/>
                                        </DataTemplate>
                                    </xctk:EditorTemplateDefinition.EditingTemplate>
                                </xctk:EditorTemplateDefinition>

                            </xctk:PropertyGrid.EditorDefinitions>

                        </xctk:PropertyGrid>

                    </DockPanel>
                </TabItem>
                <TabItem Visibility="Collapsed">
                    <!-- Non AMS and AMS Destination  -->
                    <TabItem.Header>
                        <TextBlock Text="{Binding Path=Tab0Label}"/>
                    </TabItem.Header>
                    <DockPanel>
                        <xctk:PropertyGrid DockPanel.Dock="Top" SelectedObject="{Binding MyGrid}"  AutoGenerateProperties="true" Margin="0,0,6,0" NameColumnWidth="200" ShowSearchBox="False" ShowSummary="True" ShowSortOptions="False" VerticalAlignment="Stretch" MaxHeight="450">
                        </xctk:PropertyGrid>

                        <Grid DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" MinHeight="300" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="45"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="105"/>
                                <ColumnDefinition Width="110"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock FontWeight="Bold" Grid.Row="0" Grid.Column="0" Margin="0,15">Subscribed Triggers</TextBlock>
                            <DataGrid VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray" x:Name="triggerDataSubscribe" Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="3" VerticalAlignment="Stretch" AutoGenerateColumns="False" Background="White" ItemsSource="{Binding SubscribedTriggers, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" AlternatingRowBackground="WhiteSmoke" VerticalScrollBarVisibility="Visible">
                                <DataGrid.Columns>
                                    <DataGridTextColumn IsReadOnly="True" Header="Available Triggers" Binding="{Binding Name}" Width="*"/>
                                    <DataGridTextColumn IsReadOnly="True" Header="Trigger ID" Binding="{Binding ID}" Width="120"/>
                                    <DataGridTextColumn IsReadOnly="True" Header="Offset" Binding="{Binding Delta}" Width="50"/>
                                    <DataGridCheckBoxColumn Header="Subscribed" Binding="{Binding Subscribed, UpdateSourceTrigger=PropertyChanged}"  Width="80"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </DockPanel>
                </TabItem>
                <TabItem Visibility="Collapsed">
                    <!-- Protocol Tab  -->
                    <TabItem.Header>
                        <TextBlock Text="{Binding Path=ProtocolLabel}"/>
                    </TabItem.Header>
                    <DockPanel>
                        <Grid Visibility="{Binding HeaderGridProtocolVisibility}" DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" MinHeight="200" MaxHeight="250" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="45"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="105"/>
                                <ColumnDefinition Width="110"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock FontWeight="Bold" Grid.Row="0" Grid.Column="0" Margin="0,15">List of HTTP Header</TextBlock>
                            <Button Click="Add_Header"  Grid.Row="0" Grid.Column="1" Margin="5,15,0,2" Width="100">Add Header</Button>
                            <Button Click="Delete_HeaderProtocol"   Grid.Row="0" Grid.Column="2" Margin="5,15,5,2" Width="100">Delete Header</Button>
                            <DataGrid VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray" RenderOptions.EdgeMode="Aliased" x:Name="headerDataGridProtocol" Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="3" VerticalAlignment="Stretch" AutoGenerateColumns="False" Background="White" ItemsSource="{Binding Headers, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" AlternatingRowBackground="WhiteSmoke" VerticalScrollBarVisibility="Visible">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Header Name" Binding="{Binding Name}" Width="*"/>
                                    <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="120"/>
                                </DataGrid.Columns>

                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="BorderThickness" Value="0,2,0,2"/>
                                        <Setter Property="BorderBrush" Value="White"/>
                                    </Style>
                                </DataGrid.CellStyle>
                            </DataGrid>
                        </Grid>

                        <xctk:PropertyGrid  x:Name="_destinationGrid" SelectedObject="{Binding MyProtocolGrid}"  AutoGenerateProperties="true" Margin="0,0,6,0" NameColumnWidth="200" ShowSearchBox="False" ShowSummary="True" ShowSortOptions="False" VerticalAlignment="Stretch"/>

                    </DockPanel>
                </TabItem>
                <TabItem Visibility="Collapsed">
                    <TabItem.Header>
                        <TextBlock Text="Message Rate Profile" FontSize="12" />
                    </TabItem.Header>
                    <StackPanel Orientation="Vertical">


                        <DockPanel  Background="#dddddd" Margin="2,4,2,0" Height="24">
                            <Label  FontWeight="Bold" >Rate Profile Entries</Label>
                            <Button  HorizontalAlignment="Right" Height="20" DockPanel.Dock="Right" Width="90" Margin="0,0,4,0" >Add Entry</Button>
                        </DockPanel>
                    </StackPanel>

                </TabItem>
                <TabItem Visibility="Collapsed">
                    <!-- Data Driven Sources  -->
                    <TabItem.Header>
                        <TextBlock Text="{Binding Path=Tab0Label}"/>
                    </TabItem.Header>
                    <DockPanel>
                        <xctk:PropertyGrid 
                                DockPanel.Dock="Top" 
                                x:Name="_propertyGrid2" 
                                SelectedObject="{Binding MyGrid}"  
                                AutoGenerateProperties="true" 
                                Margin="0,0,6,0" 
                                NameColumnWidth="200" 
                                ShowSearchBox="False" 
                                ShowSummary="True" 
                                ShowSortOptions="False" 
                                VerticalAlignment="Stretch" 
                                MaxHeight="400" />


                        <TabControl DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" MinHeight="150" VerticalAlignment="Stretch" Margin="0,2,4,0">
                            <TabItem>
                                <TabItem.Header>Triggers</TabItem.Header>
                                <Grid  HorizontalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="45"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="105"/>
                                        <ColumnDefinition Width="110"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock FontWeight="Bold" Grid.Row="0" Grid.Column="0" Margin="0,15">List of Triggers</TextBlock>
                                    <Button Click="Add_Trigger"  Grid.Row="0" Grid.Column="1" Margin="5,15,0,2" Width="100">Add Trigger</Button>
                                    <Button Click="Delete_Trigger"   Grid.Row="0" Grid.Column="2" Margin="5,15,5,2" Width="100">Delete Trigger</Button>
                                    <DataGrid VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray" RenderOptions.EdgeMode="Aliased" x:Name="triggerDataGrid2" Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="3" VerticalAlignment="Stretch" AutoGenerateColumns="False" Background="White" ItemsSource="{Binding Triggers, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" AlternatingRowBackground="WhiteSmoke" VerticalScrollBarVisibility="Visible">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Trigger Name" Binding="{Binding Name}" Width="*"/>
                                            <DataGridTextColumn Header="Trigger ID" Binding="{Binding ID}" Width="120"/>
                                            <DataGridTextColumn Header="Offset" Binding="{Binding Delta}" Width="50"/>
                                        </DataGrid.Columns>

                                        <DataGrid.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="BorderThickness" Value="0,2,0,2"/>
                                                <Setter Property="BorderBrush" Value="White"/>
                                            </Style>
                                        </DataGrid.CellStyle>
                                    </DataGrid>
                                </Grid>
                            </TabItem>
                            <TabItem Visibility="{Binding HeaderVisibility}">
                                <TabItem.Header>HTTP Headers</TabItem.Header>
                                <Grid HorizontalAlignment="Stretch" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="45"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="105"/>
                                        <ColumnDefinition Width="110"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock FontWeight="Bold" Grid.Row="0" Grid.Column="0" Margin="0,15">List of HTTP Header</TextBlock>
                                    <Button Click="Add_Header"  Grid.Row="0" Grid.Column="1" Margin="5,15,0,2" Width="100">Add Header</Button>
                                    <Button Click="Delete_Header"   Grid.Row="0" Grid.Column="2" Margin="5,15,5,2" Width="100">Delete Header</Button>
                                    <DataGrid VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray" RenderOptions.EdgeMode="Aliased" x:Name="headerDataGrid" Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="3" VerticalAlignment="Stretch" AutoGenerateColumns="False" Background="White" ItemsSource="{Binding Headers, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" AlternatingRowBackground="WhiteSmoke" VerticalScrollBarVisibility="Visible">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Header Name" Binding="{Binding Name}" Width="*"/>
                                            <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="120"/>
                                        </DataGrid.Columns>

                                        <DataGrid.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="BorderThickness" Value="0,2,0,2"/>
                                                <Setter Property="BorderBrush" Value="White"/>
                                            </Style>
                                        </DataGrid.CellStyle>
                                    </DataGrid>
                                </Grid>
                            </TabItem>
                        </TabControl>




                    </DockPanel>
                </TabItem>
                <TabItem Visibility="Collapsed">
                    <!-- Variable Definition (Data Grid for List types)  -->
                    <TabItem.Header>
                        <TextBlock Text="Variable Definition"/>
                    </TabItem.Header>
                    <DockPanel>
                        <xctk:PropertyGrid DockPanel.Dock="Top"  Grid.Row="0" SelectedObject="{Binding MyVariableGrid}"  AutoGenerateProperties="true" Margin="0,0,6,0" NameColumnWidth="200" ShowSearchBox="False"  ShowSummary="True" ShowSortOptions="False" VerticalAlignment="Top">
                            <xctk:PropertyGrid.EditorDefinitions>
                                <xctk:EditorTemplateDefinition>
                                    <xctk:EditorTemplateDefinition.TargetProperties>
                                        <System:String>NormalDouble</System:String>
                                    </xctk:EditorTemplateDefinition.TargetProperties>
                                    <xctk:EditorTemplateDefinition.EditingTemplate>
                                        <DataTemplate>
                                            <xctk:DoubleUpDown FormatString="F2" Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </xctk:EditorTemplateDefinition.EditingTemplate>
                                </xctk:EditorTemplateDefinition>

                                <xctk:EditorTemplateDefinition>
                                    <xctk:EditorTemplateDefinition.TargetProperties>
                                        <System:String>StdDev</System:String>
                                    </xctk:EditorTemplateDefinition.TargetProperties>
                                    <xctk:EditorTemplateDefinition.EditingTemplate>
                                        <DataTemplate>
                                            <xctk:DoubleUpDown FormatString="F2" Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="0.0"/>
                                        </DataTemplate>
                                    </xctk:EditorTemplateDefinition.EditingTemplate>
                                </xctk:EditorTemplateDefinition>

                                <xctk:EditorTemplateDefinition>
                                    <xctk:EditorTemplateDefinition.TargetProperties>
                                        <System:String>Rate</System:String>
                                    </xctk:EditorTemplateDefinition.TargetProperties>
                                    <xctk:EditorTemplateDefinition.EditingTemplate>
                                        <DataTemplate>
                                            <xctk:DoubleUpDown FormatString="F2" Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="0.0" Maximum="3000.0"/>
                                        </DataTemplate>
                                    </xctk:EditorTemplateDefinition.EditingTemplate>
                                </xctk:EditorTemplateDefinition>

                            </xctk:PropertyGrid.EditorDefinitions>

                        </xctk:PropertyGrid>


                        <Grid DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" Visibility="{Binding MyVariableGrid.Visibility}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="45"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="105"/>
                                <ColumnDefinition Width="110"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock FontWeight="Bold" Grid.Row="0" Grid.Column="0" Margin="0,15">List of Values</TextBlock>
                            <Button Click="Add_Value" Grid.Row="0" Grid.Column="1" Margin="5,15,0,2" Width="100">Add Value</Button>
                            <Button Click="Delete_Value" Grid.Row="0"  Grid.Column="2" Margin="5,15,5,2" Width="100">Delete Value</Button>
                            <DataGrid  VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray"  x:Name="valueGrid" Background="White" Grid.Row="1" Grid.ColumnSpan="3" VerticalAlignment="Stretch" AutoGenerateColumns="False" ItemsSource="{Binding MyVariableGrid.Values, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" AlternatingRowBackground="WhiteSmoke" VerticalScrollBarVisibility="Visible">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="*"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>

                    </DockPanel>
                </TabItem>
                <TabItem Visibility="Collapsed">
                    <TabItem.Header>Timed Event Driven Data Injectors</TabItem.Header>
                    <RichTextBox HorizontalAlignment="Stretch" Margin="5,15,5,0" BorderThickness="0">
                        <FlowDocument>
                            <Paragraph>
                                <Bold>Timed Event Driven Sources</Bold>
                            </Paragraph>
                            <Paragraph>Event driven data sources use time elements within the data to determine when to inject a message. For example, on of the elements of the XML data you are using as a source may be a time element. This element can be used as the time basis to inject a message

                            </Paragraph>
                            <Paragraph>The key items to define for a event driven source are:</Paragraph>
                            <Paragraph Margin="25,0,0,16" TextIndent="-25" >&#x27A4;
                                <Bold>Iteration Data Source.</Bold> The source data for each iteration
                            </Paragraph>
                            <Paragraph Margin="25,0,0,16" TextIndent="-25" >&#x27A4;
                                <Bold>Time Element.</Bold> The element or field withing the source data which defines the time when the message is to be injected
                            </Paragraph>
                            <Paragraph Margin="25,0,0,16" TextIndent="-25" >&#x27A4;
                                <Bold>Trigger.</Bold> The identifiers that destinations subscribe to in order to recieve messages from thhe source
                            </Paragraph>
                            <Paragraph>Multiple triggers can be defined. Each trigger must have a unique identifier. The trigger can be fired a plus/minus an offset in minutes relative to the time in the defined teim element
                            </Paragraph>
                            <Paragraph Margin="5,10,0,0">Right Click on
                                <Run Foreground="Blue" FontWeight="DemiBold">Timed Event Data Driven Injectors</Run> to add a new source
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </TabItem>
                <TabItem Visibility="Collapsed">
                    <TabItem.Header>Rate Driven Data Injectors</TabItem.Header>
                    <RichTextBox HorizontalAlignment="Stretch" Margin="5,15,5,0" BorderThickness="0">
                        <FlowDocument>
                            <Paragraph>
                                <Bold>Rate Driven Sources</Bold>
                            </Paragraph>
                            <Paragraph>Rate driven sources inject events at timed intervals. For example, 60 messages per minute. By using
                                <Italic>Message Send Profile</Italic> you can limit vary rate of send messages and limit the time and total number of messages sent
                            </Paragraph>
                            <Paragraph>The key items to define for a rate driven source are:</Paragraph>
                            <Paragraph Margin="25,0,0,16" TextIndent="-25" >&#x27A4;
                                <Bold>Trigger ID</Bold> The identifier that destinations subscribe to in order to recieve messages from thhe source
                            </Paragraph>
                            <Paragraph Margin="25,0,0,16" TextIndent="-25" >&#x27A4;
                                <Bold>Messages Per Minute.</Bold> The rate at which to generate messages
                            </Paragraph>
                            <Paragraph Margin="25,0,0,16" TextIndent="-25" >&#x27A4;
                                <Bold>Iteration Data Source.</Bold> The source data for each iteration
                            </Paragraph>
                            <Paragraph>The Iteration Data Source can be set to "Pulsar". In this case, no data is supplied by the source. This can be used by Destinations that only use constructed variab;es of no variables at all in their templates
                            </Paragraph>
                            <Paragraph Margin="5,10,0,0">Right Click on
                                <Run Foreground="Blue" FontWeight="DemiBold">Rate Driven Injectors</Run> to add a new source
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </TabItem>
                <TabItem Visibility="Collapsed">
                    <TabItem.Header>Message Destinations</TabItem.Header>
                    <RichTextBox HorizontalAlignment="Stretch" Margin="5,15,5,0" BorderThickness="0">
                        <FlowDocument>
                            <Paragraph>
                                <Bold>Messsage Destinations</Bold>
                            </Paragraph>
                            <Paragraph>Message Destinations define the content of the message to be sent and where the message is to be sent</Paragraph>
                            <Paragraph>The key items to define for a message destination are:</Paragraph>
                            <Paragraph Margin="25,0,0,16" TextIndent="-25" >&#x27A4;
                                <Bold>Template File.</Bold> The file that forms the basis of the constructed message
                            </Paragraph>
                            <Paragraph Margin="25,0,0,16" TextIndent="-25" >&#x27A4;
                                <Bold>Variables.</Bold> The data to be substituted into the message template each iteration which are identified by unique tokens within the template
                            </Paragraph>
                            <Paragraph Margin="25,0,0,16" TextIndent="-25" >&#x27A4;
                                <Bold>Subscribed Triggers.</Bold> The triggering events which contain the data for the variables
                            </Paragraph>
                            <Paragraph Margin="25,0,0,16" TextIndent="-25" >&#x27A4;
                                <Bold>Protocol.</Bold> The protocol to send the message via. The details of the protocol are defined in a second tab group
                            </Paragraph>
                            <Paragraph Margin="5,10,0,0">Right Click on
                                <Run Foreground="Green" FontWeight="DemiBold">Message Destinations</Run> to add a new source
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </TabItem>
                <TabItem Visibility="Collapsed">
                    <TabItem.Header>Filter Flights</TabItem.Header>
                    <RichTextBox HorizontalAlignment="Stretch" Margin="5,15,5,0" BorderThickness="0">
                        <FlowDocument>
                            <Paragraph>
                                <Bold>Flight Filters</Bold>
                            </Paragraph>
                            <Paragraph>Elements that make use of Flight data from SITA AMS can apply filters to the flight</Paragraph>
                            <Paragraph>If a flight does not pass the filter then no message is sent</Paragraph>

                        </FlowDocument>
                    </RichTextBox>
                </TabItem>
                <TabItem Visibility="Collapsed">
                    <TabItem.Header>Configure</TabItem.Header>
                    <RichTextBox HorizontalAlignment="Stretch" Margin="5,15,5,0" BorderThickness="0">
                        <FlowDocument>
                            <Paragraph>
                                <Bold>Load Injector Configuration</Bold>
                            </Paragraph>
                            <Paragraph>Right click on the folders in the configuration tree to add Source Injectors and Destinations</Paragraph>
                            <Paragraph>Click on "Settings" to set the meta data for this configuration</Paragraph>
                            <Paragraph>Save you updates to a file so it can be loaded at a later date</Paragraph>
                            <Paragraph>When you are ready to execute, select "Execute.." from  the top menu to open the execution window</Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </TabItem>
            </TabControl>



        </Grid>

        <Grid Grid.Row="1">
            <StatusBar Height="25"  VerticalAlignment="Top">
                <StatusBarItem  >
                    <TextBox  Text="{Binding Path=Path, Mode=OneWay}" Background="WhiteSmoke" Foreground="Gray" IsReadOnly="True" BorderBrush="{x:Null}" ></TextBox>
                </StatusBarItem>
            </StatusBar>
        </Grid>
    </Grid>

</UserControl>
